version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.4-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: clerb
          RAILS_ENV: test
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: clerb
          POSTGRES_DB: clerb-rails_test
          POSTGRES_PASSWORD: ""

    working_directory: ~/clerb-rails

    steps:
      - checkout

      # Download and cache dependencies.
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # Fall back to using the latest cache if no exact match is found.
          - v1-dependencies-

      - restore_cache:
          keys:
          - v1-yarn-cache-{{ checksum "yarn.lock" }}
          - v1-yarn-cache-

      - restore_cache:
          keys:
          - v1-npm-dependencies-{{ checksum "yarn.lock" }}
          - v1-npm-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: Install npm dependencies
          command: yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - save_cache:
          key: v1-yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: v1-npm-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
        
      # Database setup.
      - run: bundle exec rake db:create db:schema:load

      # Run tests.
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # Collect reports.
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /coverage
